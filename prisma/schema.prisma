generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int     @id @default(autoincrement())
  name        String?
  email       String  @unique
  password    String
  phone       String?
  location    String?
  bio         String?
  expertise   String?
  payment     String?
  taxId       String?
  portfolio   String?
  title       String?
  image       String?
  resume      String?
  coverLetter String?
  notifications Notification[]
  projects      Project[]
  gigs          Gig[]
  orders        Order[] @relation("BuyerOrders")
}

model Testimonial {
  id        Int     @id @default(autoincrement())
  name      String
  message   String
  avatarUrl String?
}

model Project {
  id        Int      @id @default(autoincrement())
  title     String
  owner     User     @relation(fields: [ownerId], references: [id])
  ownerId   Int
  status    String
  createdAt DateTime @default(now())
}

model Gig {
  id        Int      @id @default(autoincrement())
  title     String
  seller    User     @relation(fields: [sellerId], references: [id])
  sellerId  Int
  description String?
  price     Float
  views     Int      @default(0)
  clicks    Int      @default(0)
  orders    Int      @default(0)
  earnings  Float    @default(0)
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  ordersList Order[]
}

model Order {
  id        Int      @id @default(autoincrement())
  gig       Gig      @relation(fields: [gigId], references: [id])
  gigId     Int
  buyer     User     @relation("BuyerOrders", fields: [buyerId], references: [id])
  buyerId   Int
  status    String   @default("pending")
  price     Float
  createdAt DateTime @default(now())
}

model Notification {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  message   String
  read      Boolean  @default(false)
  createdAt DateTime @default(now())
}
