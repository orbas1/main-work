generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int     @id @default(autoincrement())
  name        String?
  email       String  @unique
  password    String
  phone       String?
  location    String?
  bio         String?
  expertise   String?
  payment     String?
  taxId       String?
  portfolio   String?
  title       String?
  image       String?
  resume      String?
  coverLetter String?
  notifications Notification[]
  projects      Project[]
  subscriptions Subscription[]
  paymentMethods PaymentMethod[]
  transactions   Transaction[]
  gigs         Gig[]
}

model Testimonial {
  id        Int     @id @default(autoincrement())
  name      String
  message   String
  avatarUrl String?
}

model Project {
  id        Int      @id @default(autoincrement())
  title     String
  owner     User     @relation(fields: [ownerId], references: [id])
  ownerId   Int
  status    String
  createdAt DateTime @default(now())
}

model Notification {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  message   String
  read      Boolean  @default(false)
  createdAt DateTime @default(now())
}

model Subscription {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  plan        String
  status      String
  autoRenew   Boolean  @default(true)
  renewalDate DateTime?
  createdAt   DateTime @default(now())
}

model PaymentMethod {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  brand     String
  last4     String
  expMonth  Int
  expYear   Int
  isDefault Boolean  @default(false)
  createdAt DateTime @default(now())
}

model Transaction {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  amount      Float
  currency    String   @default("USD")
  description String
  status      String
model Gig {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  price       Int
  category    String?
  thumbnail   String?
  rating      Float?
  seller      User     @relation(fields: [sellerId], references: [id])
  sellerId    Int
  createdAt   DateTime @default(now())
}
